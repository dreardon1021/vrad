{"version":3,"sources":["assets/marker.png","assets/denver-background.jpg","assets/left.png","assets/right.png","components/Nav/Nav.js","components/Login/Login.js","components/Area/Area.js","components/CardsContainer/CardsContainer.js","components/Listing/Listing.js","components/MapContainer/MapContainer.js","components/ListingsContainer/ListingsContainer.js","components/Carousel/Carousel.js","components/Details/Details.js","components/App/App.js","helpers.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","props","className","src","marker","alt","userinfo","name","visitReason","to","favorites","length","onClick","e","logOutUser","Login","logInUser","updateFormState","target","value","setState","checkField","nameValid","state","emailValid","reasonValid","test","String","toLowerCase","validateForm","formValid","throwErrorMessage","submitLogin","preventDefault","user","username","email","loginFailed","button","this","process","role","error","data-testid","placeholder","type","onChange","denverbackground","Component","Area","about","id","shortName","areaNameNoSpaces","longName","chooseNeighborhood","replace","imgSrc","CardsContainer","selectedArea","areas","map","area","key","Listing","highlighted","listing_id","area_id","addDeleteFavorite","favorite","style","MapContainer","onMarkerClicked","selectedPlace","activeMarker","showingInfoWindow","highlightListing","onMapClicked","points","listings","listing","lat","lng","bounds","google","maps","LatLngBounds","i","extend","initialCenter","zoom","disableDefaultUI","styles","featureType","elementType","stylers","visibility","position","onMouseover","onMarkerMouseOver","onMouseout","onMouseOutMarker","cost","details","cost_per_night","visible","GoogleApiWrapper","apiKey","ListingsContainer","listingID","highlightedListing","getLatLong","listingsToMap","fetch","address","street","split","join","zip","then","response","json","data","lon","catch","console","log","Promise","all","listingsData","pathname","includes","class","Carousel","currentImageIndex","n","m","newIndex","mod","imageIds","changeImage","left","right","Details","selectedListing","beds","baths","features","feature","string","stringArray","toUpperCase","uppercase","App","getListingsData","areasData","promises","reduce","allListings","forEach","push","getAllListings","userInfo","currentFavorites","splice","indexOf","userFavorites","concat","res","info","exact","path","render","routeValues","match","history","params","location","currentlyShownListings","filter","parseInt","find","property","favoriteListings","Boolean","window","hostname","router","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b3f531be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/marker.1fb36206.png\";","module.exports = __webpack_public_path__ + \"static/media/denver-background.75626fae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/left.ecdc2137.png\";","module.exports = __webpack_public_path__ + \"static/media/right.203b0311.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Nav.css\";\nimport { Link } from \"react-router-dom\";\nimport marker from \"../../assets/marker.png\";\n\nconst Nav = (props) => {\n  return (\n    <nav>\n      <div className=\"logo-nav\">\n        <img className=\"nav-marker\" src={marker} alt=\"\" />\n        <h2 className=\"nav-title\">\n          VRAD\n          {/* <span className=\"nav-subtitle\">Vacation Rentals Around Denver</span> */}\n        </h2>\n      </div>\n      {props.userinfo.name && (\n        <div className=\"logged-in-elements\">\n          <div className=\"greeting-btn-container\">\n            <h2 className=\"greeting\">Hello, {props.userinfo.name}</h2>\n            <div className=\"trip-type\">\n              Trip type: {props.userinfo.visitReason}\n            </div>\n          </div>\n          <div className=\"nav-btn-container fav-btn\">\n            <Link to=\"/favorites\" className=\"nav-btn\">\n              Favorites ({props.userinfo.favorites.length})\n            </Link>\n          </div>\n          <div\n            onClick={(e) => props.logOutUser(e)}\n            className=\"nav-btn-container\"\n          >\n            <Link to=\"/\" className=\"nav-btn\">\n              Log out\n            </Link>\n          </div>\n        </div>\n      )}\n    </nav>\n  );\n};\n\nexport default Nav;\n\nNav.propTypes = {\n  logOutUser: PropTypes.func,\n  userInfo: PropTypes.object,\n};\n","import React, { Component } from \"react\";\n\nimport \"./Login.css\";\nimport denverbackground from \"../../assets/denver-background.jpg\";\nimport marker from \"../../assets/marker.png\";\n\nimport { NavLink } from \"react-router-dom\";\n\nclass Login extends Component {\n  constructor({ logInUser }) {\n    super();\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      visitReason: \"\",\n      nameValid: false,\n      emailValid: false,\n      reasonValid: false,\n      formValid: false,\n      loginFailed: false,\n    };\n  }\n\n  updateFormState = (e) => {\n    let { name, value } = e.target;\n    this.setState({ [name]: value }, this.checkField(name, value));\n  };\n\n  checkField = (name, value) => {\n    let nameValid = this.state.nameValid;\n    let emailValid = this.state.emailValid;\n    let reasonValid = this.state.reasonValid;\n\n    switch (name) {\n      case \"username\":\n        let regexUsername = /[A-Za-z]/i;\n        nameValid = regexUsername.test(value);\n        break;\n      case \"email\":\n        let regexEmail = /\\S+@\\S+\\.\\S+/;\n        emailValid = regexEmail.test(String(value).toLowerCase());\n        break;\n      case \"visitReason\":\n        let regexReason = /[^(\"\")]/;\n        reasonValid = regexReason.test(value);\n        break;\n      default:\n        break;\n    }\n\n    this.setState(\n      {\n        nameValid: nameValid,\n        emailValid: emailValid,\n        reasonValid: reasonValid,\n      },\n      this.validateForm\n    );\n  };\n\n  validateForm = () => {\n    this.setState({\n      formValid:\n        this.state.nameValid && this.state.emailValid && this.state.reasonValid,\n    });\n  };\n\n  throwErrorMessage = () => {\n    if (!this.state.nameValid) {\n      return \"Please enter a valid name\";\n    } else if (!this.state.emailValid) {\n      return \"Please enter a valid email address\";\n    } else if (!this.state.reasonValid) {\n      return \"Please enter a reason for your visit\";\n    }\n  };\n\n  submitLogin = (e) => {\n    e.preventDefault();\n    const user = {\n      name: this.state.username,\n      email: this.state.email,\n      visitReason: this.state.visitReason,\n      favorites: [],\n    };\n    if (this.state.formValid) {\n      this.props.logInUser(user);\n    } else {\n      this.setState({ loginFailed: true });\n    }\n  };\n\n  render() {\n    let button = this.state.formValid ? (\n      <NavLink\n        className=\"login-button\"\n        to={process.env.PUBLIC_URL + \"/areas\"}\n        role=\"button\"\n      >\n        Login\n      </NavLink>\n    ) : (\n      <button className=\"login-button\">Login</button>\n    );\n    let error = this.throwErrorMessage();\n    return (\n      <section className=\"login-background\">\n        <div className=\"form-container\">\n          {\n            <form data-testid=\"form\">\n              <div className=\"header-container\">\n                <div className=\"logo-container\">\n                  <img className=\"marker\" src={marker} alt=\"\" />\n\n                  <h2 data-testid=\"header\" className=\"login-header\">\n                    VRAD\n                  </h2>\n                </div>\n                <h3 className=\"slogan\">Vacation Rentals Around Denver</h3>\n              </div>\n\n              <p className=\"error-message\">\n                {this.state.loginFailed ? error : \"\"}\n              </p>\n              <div className=\"inputs-container\">\n                <input\n                  className=\"name-input\"\n                  name=\"username\"\n                  placeholder=\"Name\"\n                  type=\"text\"\n                  value={this.state.username}\n                  onChange={(e) => this.updateFormState(e)}\n                />\n                <input\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  type=\"email\"\n                  value={this.state.email}\n                  onChange={(e) => this.updateFormState(e)}\n                />\n              </div>\n              <select\n                data-testid=\"select\"\n                name=\"visitReason\"\n                value={this.state.visitReason}\n                onChange={(e) => this.updateFormState(e)}\n              >\n                <option value=\"\">Reason for visit</option>\n                <option value=\"business\">Business</option>\n                <option value=\"vacation\">Vacation</option>\n                <option value=\"other\">Other</option>\n              </select>\n              <div\n                className=\"login-button-container\"\n                onClick={(e) => this.submitLogin(e)}\n              >\n                {button}\n              </div>\n            </form>\n          }\n        </div>\n\n        <div className=\"img-container\">\n          <img className=\"hero-img\" src={denverbackground} alt=\"\" />\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Area.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Area = ({ about, id, shortName, longName, chooseNeighborhood }) => {\n  let areaNameNoSpaces = shortName.replace(/\\s/g, \"\");\n  let imgSrc = `../images/neighborhoods/${areaNameNoSpaces}.jpg`;\n\n  return (\n    <article id={id}>\n      <div className=\"article-inner\">\n        <div className=\"title-image-description-container\">\n          <div className=\"title-subtitle-container\">\n            <h3 className=\"area-title\">{shortName}</h3>\n          </div>\n          <img className=\"neighborhood-image\" src={imgSrc} alt=\"\" />\n          <div className=\"area-card-info\">\n            <p className=\"about\">{about}</p>\n          </div>\n        </div>\n        <div name={id} className=\"view-listings-button-container\">\n          <NavLink\n            to={\"/areas/\" + id + \"/listings\"}\n            className=\"view-listings-button\"\n            name={id}\n            role=\"button\"\n            data-testid={id}\n          >\n            View Listings\n          </NavLink>\n        </div>\n      </div>\n    </article>\n  );\n};\n\nexport default Area;\n\nArea.propTypes = {\n  about: PropTypes.string,\n  \"data-testid\": PropTypes.string,\n  id: PropTypes.number,\n  longName: PropTypes.string,\n  shortName: PropTypes.string,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./CardsContainer.css\";\nimport Area from \"../Area/Area\";\n\nclass CardsContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedArea: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <section data-testid=\"card-container\" className=\"areas-card-container\">\n        {this.props.areas.map(area => {\n          return (\n            <Area\n              data-testid=\"card\"\n              about={area.about}\n              id={area.id}\n              key={area.id}\n              shortName={area.area}\n              longName={area.name}\n            />\n          );\n        })}\n      </section>\n    );\n  }\n}\n\nexport default CardsContainer;\n\nCardsContainer.propTypes = {\n  areas: PropTypes.array,\n  history: PropTypes.object,\n  location: PropTypes.object,\n  match: PropTypes.object\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Listing.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Listing = (props) => {\n  return (\n    <div\n      data-testid=\"listing-card\"\n      className={props.highlighted ? \"card highlighted\" : \"card\"}\n    >\n      <div className=\"property-title\">\n        <h3 className=\"property-title-text\">{props.name}</h3>\n      </div>\n      <div className=\"image-btn\">\n        <img\n          src={\"../../../images/\" + props.listing_id + \"_a.jpg\"}\n          className=\"listings-page-img\"\n          alt={props.name}\n        />\n        <div className=\"btns-container\">\n          <Link\n            to={\"/areas/\" + props.area_id + \"/listings/\" + props.listing_id}\n            className=\"listings-btn\"\n            data-testid={props.listing_id}\n          >\n            View\n          </Link>\n          <div\n            data-testid=\"favorite-btn\"\n            className=\"listing-heart-container\"\n            onClick={(e) => props.addDeleteFavorite(props.listing_id)}\n          >\n            <i\n              className={\n                props.favorite\n                  ? \"fas fa-heart listing-heart listing-heart-active fa-2x\"\n                  : \"fas fa-heart listing-heart listing-heart-inactive fa-2x\"\n              }\n            ></i>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Listing;\n\nListing.propTypes = {\n  name: PropTypes.string,\n  listing_id: PropTypes.number,\n  area_id: PropTypes.number,\n  addDeleteFavorite: PropTypes.func,\n  favorite: PropTypes.bool,\n};\n","import React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\n// import Marker from \"../Marker/Marker\";\nimport \"./MapContainer.css\";\n\nconst style = {\n  // width: \"100%\",\n  // height: \"100%\",\n};\n\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n    };\n  }\n\n  onMarkerClicked = (props, marker, e) => {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n    });\n    this.props.highlightListing(this.state.selectedPlace.listing_id);\n  };\n\n  onMapClicked = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null,\n        selectedPlace: \"\",\n      });\n      this.props.highlightListing(this.state.selectedPlace.listing_id);\n    }\n  };\n\n  render() {\n    var points = this.props.listings.map((listing) => {\n      return {\n        lat: +listing.lat,\n        lng: +listing.lng,\n      };\n    });\n    var bounds = new this.props.google.maps.LatLngBounds();\n    for (var i = 0; i < points.length; i++) {\n      bounds.extend(points[i]);\n    }\n\n    return (\n      <Map\n        google={this.props.google}\n        style={style}\n        initialCenter={{\n          lat: 39.742043,\n          lng: -104.991531,\n        }}\n        zoom={12}\n        onClick={this.onMapClicked}\n        bounds={bounds}\n        disableDefaultUI={true}\n        styles={[\n          {\n            featureType: \"poi\",\n            elementType: \"labels\",\n            stylers: [{ visibility: \"off\" }],\n          },\n        ]}\n      >\n        {this.props.listings.map((listing) => {\n          return (\n            <Marker\n              position={{ lat: +listing.lat, lng: +listing.lng }}\n              name={listing.name}\n              listing_id={listing.listing_id}\n              area_id={listing.area_id}\n              onMouseover={this.onMarkerMouseOver}\n              onMouseout={this.onMouseOutMarker}\n              onClick={this.onMarkerClicked}\n              cost={listing.details.cost_per_night}\n              key={listing.listing_id}\n            />\n          );\n        })}\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n        >\n          <div data-testid=\"listing-card\" className=\"card-map\">\n            <h3>\n              {this.state.selectedPlace.name}, ${this.state.selectedPlace.cost}\n            </h3>\n\n            {/* <button className=\"listings-btn\">View</button> */}\n          </div>\n        </InfoWindow>\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_API_KEY,\n})(MapContainer);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ListingsContainer.css\";\nimport Listing from \"../Listing/Listing\";\nimport MapContainer from \"../MapContainer/MapContainer\";\n\nclass ListingsContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { listingsToMap: [], highlightedListing: {} };\n  }\n\n  componentDidMount() {\n    this.getLatLong(this.props.listingsData);\n  }\n\n  highlightListing = (listingID) => {\n    this.setState({ highlightedListing: listingID });\n  };\n\n  getLatLong = (listingsToMap) => {\n    let listings = listingsToMap.map((listing) => {\n      return fetch(\n        `https://nominatim.openstreetmap.org/?addressdetails=1&q=${listing.address.street\n          .split(\" \")\n          .join(\"+\")}+${listing.address.zip}&format=json&limit=1`\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          return {\n            listing_id: listing.listing_id,\n            area_id: listing.area_id,\n            name: listing.name,\n            lat: data[0].lat,\n            lng: data[0].lon,\n            address: listing.address,\n            details: listing.details,\n          };\n        })\n        .catch((error) => console.log(error));\n    });\n    Promise.all(listings).then((response) =>\n      this.setState({ listingsToMap: response })\n    );\n  };\n\n  render() {\n    return (\n      <section\n        data-testid=\"listing-container\"\n        className=\"listings-card-container\"\n      >\n        {\" \"}\n        <h2 className=\"listings-header\">\n          {this.props.pathname.includes(\"/favorites\") ? \"Favorites\" : \"\"}\n        </h2>\n        {this.props.favorites.length === 0 &&\n        this.props.pathname === \"/favorites\" ? (\n          <div class=\"no-favorites\">\n            <h3>You have no favorites!</h3>\n          </div>\n        ) : (\n          \"\"\n        )}\n        <div className=\"listings-container-inner\">\n          {this.props.pathname !== \"/favorites\" ? (\n            <div className=\" card-map-container\">\n              <MapContainer\n                listings={this.state.listingsToMap}\n                highlightListing={this.highlightListing}\n              />\n            </div>\n          ) : (\n            \"\"\n          )}\n\n          <div className=\"listing-tiles\">\n            {this.props.listingsData.map((listing) => {\n              return (\n                <Listing\n                  highlighted={\n                    this.state.highlightedListing === listing.listing_id\n                      ? true\n                      : false\n                  }\n                  name={listing.name}\n                  listing_id={listing.listing_id}\n                  area_id={this.props.area_id}\n                  key={listing.listing_id}\n                  favorite={this.props.favorites.includes(listing.listing_id)}\n                  addDeleteFavorite={this.props.addDeleteFavorite}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ListingsContainer;\n\nListingsContainer.propTypes = {\n  addDeleteFavorite: PropTypes.func,\n  area_id: PropTypes.number,\n  favorites: PropTypes.array,\n  pathname: PropTypes.string,\n  listingsData: PropTypes.array,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Carousel.css\";\nimport left from \"../../assets/left.png\";\nimport right from \"../../assets/right.png\";\n\nclass Carousel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentImageIndex: 0\n    };\n  }\n\n  mod(n, m) {\n    return ((n % m) + m) % m;\n  }\n\n  changeImage(e) {\n    let { name } = e.target;\n    const newIndex =\n      name === \"right\"\n        ? this.mod(this.state.currentImageIndex + 1, 3)\n        : this.mod(this.state.currentImageIndex - 1, 3);\n    this.setState({\n      currentImageIndex: newIndex\n    });\n  }\n\n  render() {\n    const imageIds = [\"A\", \"B\", \"C\"];\n    return (\n      <section className=\"carousel\">\n        <img\n          src={\n            \"../../../images/\" +\n            this.props.listing_id +\n            \"_\" +\n            imageIds[this.state.currentImageIndex] +\n            \".jpg\"\n          }\n          className=\"details-img\"\n          alt={\n            this.props.listing_id + \"_\" + imageIds[this.state.currentImageIndex]\n          }\n        />\n        <div className=\"carousel-control\">\n          <div className=\"carousel-back\" onClick={e => this.changeImage(e)}>\n            <img\n              src={left}\n              alt=\"left-arrow\"\n              className=\"control-item\"\n              name=\"left\"\n              onClick={e => this.changeImage(e)}\n            />\n          </div>\n          <div>\n            <p className=\"image-number\">\n              Photo {this.state.currentImageIndex + 1} of 3\n            </p>\n          </div>\n          <div className=\"carousel-forward\" onClick={e => this.changeImage(e)}>\n            <img\n              src={right}\n              alt=\"right-arrow\"\n              className=\"control-item\"\n              name=\"right\"\n            />\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Carousel;\n\nCarousel.propTypes = {\n  listing_id: PropTypes.number\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Details.css\";\nimport Carousel from \"../Carousel/Carousel\";\n\nconst Details = ({ selectedListing, addDeleteFavorite, favorites }) => {\n  let { name, address, details, listing_id } = selectedListing;\n  let { street, zip } = address;\n  let { beds, baths, cost_per_night, features } = details;\n\n  const uppercase = string => {\n    let stringArray = string.split(\"\");\n    stringArray[0] = stringArray[0].toUpperCase();\n    let newWord = stringArray.join(\"\");\n    return newWord;\n  };\n\n  return (\n    <section className=\"details\">\n      <div className=\"title-btn-container\">\n        <div className=\"title-address-container\">\n          <h1 className=\"details-title\">{name}</h1>\n          <h2 className=\"details-address\">\n            {street} {zip}\n          </h2>\n        </div>\n        <button\n          className={\n            favorites.includes(listing_id)\n              ? \"details-active\"\n              : \"details-fav-btn\"\n          }\n          onClick={e => addDeleteFavorite(listing_id)}\n        >\n          <i\n            className={\n              favorites.includes(listing_id) ? \"fas fa-heart\" : \"far fa-heart\"\n            }\n          ></i>\n          Favorite\n        </button>\n      </div>\n      <div className=\"details-body\">\n        <div className=\"other-details-container\">\n          <div className=\"bed-bath-container\">\n            <div className=\"bed-bath-display\">\n              <div className=\"num-beds\">{beds}</div> <div>beds</div>\n            </div>\n            <div className=\"bed-bath-display\">\n              <div className=\"num-baths\">{baths}</div> <div>baths</div>\n            </div>\n          </div>\n          <div className=\"cost-per-night-container\">\n            <span className=\"cost-highlight\">${cost_per_night}</span>/night\n          </div>\n\n          {!!features.length && (\n            <div className=\"features-list\">\n              <h3 className=\"features-title\">Features</h3>\n              <ul>\n                {features.map((feature, i) => {\n                  return <li key={i}>{uppercase(feature)}</li>;\n                })}\n              </ul>\n            </div>\n          )}\n        </div>\n        <Carousel listing_id={listing_id} />\n      </div>\n    </section>\n  );\n};\n\nexport default Details;\n\nDetails.propTypes = {\n  addDeleteFavorite: PropTypes.func,\n  favorites: PropTypes.array,\n  selectedListing: PropTypes.object\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Nav from \"../Nav/Nav\";\nimport Login from \"../Login/Login\";\nimport CardsContainer from \"../CardsContainer/CardsContainer\";\nimport ListingsContainer from \"../ListingsContainer/ListingsContainer\";\nimport Details from \"../Details/Details\";\nimport { Route } from \"react-router-dom\";\nimport { getAllListings } from \"../../helpers.js\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userInfo: { name: \"\", email: \"\", visitReason: \"\", favorites: [] },\n      areas: [],\n      listings: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3001/api/v1/areas\")\n      .then((response) => response.json())\n      .then((data) => {\n        const promises = data.areas.map((area) => {\n          return fetch(\"http://localhost:3001\" + area.details)\n            .then((res) => res.json())\n            .then((info) => {\n              return {\n                area: area.area,\n                about: info.about,\n                id: info.id,\n                name: info.name,\n                listings: info.listings,\n              };\n            });\n        });\n        return Promise.all(promises);\n      })\n      .then((areas) => {\n        this.setState({ areas });\n        this.getListingsData(areas);\n      })\n      .catch((error) => console.error(error));\n  }\n\n  getListingsData = (areasData) => {\n    getAllListings(areasData).then((data) => this.setState({ listings: data }));\n  };\n\n  logInUser = (user) => {\n    this.setState({\n      userInfo: user,\n    });\n  };\n\n  addDeleteFavorite = (id) => {\n    let currentFavorites = this.state.userInfo.favorites;\n    if (currentFavorites.includes(id)) {\n      currentFavorites.splice(currentFavorites.indexOf(id), 1);\n      this.setState({\n        userInfo: {\n          name: this.state.userInfo.name,\n          email: this.state.userInfo.email,\n          visitReason: this.state.userInfo.visitReason,\n          favorites: currentFavorites,\n        },\n      });\n    } else {\n      let userFavorites = currentFavorites.concat([id]);\n      this.setState({\n        userInfo: {\n          name: this.state.userInfo.name,\n          email: this.state.userInfo.email,\n          visitReason: this.state.userInfo.visitReason,\n          favorites: userFavorites,\n        },\n      });\n    }\n  };\n\n  logOutUser = () => {\n    this.setState({\n      userInfo: { name: \"\", email: \"\", visitReason: \"\", favorites: [] },\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.userInfo.name && (\n          <Nav userinfo={this.state.userInfo} logOutUser={this.logOutUser} />\n        )}\n        <main>\n          <Route\n            exact\n            path={process.env.PUBLIC_URL + \"/\"}\n            render={(routeValues) => (\n              <Login logInUser={this.logInUser} {...routeValues} />\n            )}\n          />\n          <Route\n            exact\n            path={process.env.PUBLIC_URL + \"/areas\"}\n            render={(routeValues) => (\n              <CardsContainer areas={this.state.areas} {...routeValues} />\n            )}\n          />\n          <Route\n            exact\n            path={process.env.PUBLIC_URL + \"/areas/:id/listings\"}\n            render={({ match, history }) => {\n              const { id } = match.params;\n              const { pathname } = history.location;\n              let currentlyShownListings = this.state.listings.filter(\n                (listing) => listing.area_id === parseInt(id)\n              );\n              return (\n                <ListingsContainer\n                  listingsData={currentlyShownListings}\n                  area_id={parseInt(id)}\n                  pathname={pathname}\n                  favorites={this.state.userInfo.favorites}\n                  addDeleteFavorite={this.addDeleteFavorite}\n                />\n              );\n            }}\n          />\n          <Route\n            exact\n            path={process.env.PUBLIC_URL + \"/areas/:id/listings/:listing\"}\n            render={({ match }) => {\n              const { listing } = match.params;\n              let selectedListing = this.state.listings.find((property) => {\n                return property.listing_id === parseInt(listing);\n              });\n              if (this.state.listings.length > 0) {\n                return (\n                  <Details\n                    selectedListing={selectedListing}\n                    addDeleteFavorite={this.addDeleteFavorite}\n                    favorites={this.state.userInfo.favorites}\n                  />\n                );\n              }\n            }}\n          />\n          <Route\n            exact\n            path={process.env.PUBLIC_URL + \"/favorites\"}\n            render={(routeValues) => {\n              const { pathname } = routeValues.location;\n              let favoriteListings = this.state.userInfo.favorites.map(\n                (favorite) => {\n                  return this.state.listings.find(\n                    (listing) => listing.listing_id === favorite\n                  );\n                }\n              );\n              return (\n                <ListingsContainer\n                  listingsData={favoriteListings}\n                  {...routeValues}\n                  pathname={pathname}\n                  favorites={this.state.userInfo.favorites}\n                  addDeleteFavorite={this.addDeleteFavorite}\n                />\n              );\n            }}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const getAllListings = areasData => {\n  const result = areasData.reduce((allListings, area) => {\n    area.listings.forEach(listing => allListings.push(listing));\n    return allListings;\n  }, []);\n  const promises = result.map(listing => {\n    return fetch(\"http://localhost:3001\" + listing).then(response =>\n      response.json()\n    );\n  });\n  return Promise.all(promises);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from 'react-router-dom'\n\n\nconst router = <BrowserRouter><App /></BrowserRouter>\n\nReactDOM.render(router, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}